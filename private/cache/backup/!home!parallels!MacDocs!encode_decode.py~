#  File name: encode_decode.py
#! python3
# This program contains two functions:
#
# decodeAnswer(): reads in a python program, and
# turns it into a piece of encoded text, which enables 
# you to submit to examplify during examination
#
# encode2File(data): takes in a piece of encoded data as
# argument, decodes that piece of data and write it to a
# file the name of which is provided by you.

import base64

def encodeAnswer():
    print('Encoding your python script (which is your answer program)')
    print('into a piece of encoded text for submission to Examplify.')
    print()
    
    filename = input('Provide full program name (eg: answer1.py): ')
    finput = open(filename,'r')
    data = finput.read()
    encoded1 = base64.b64encode(data.encode('utf-8'))
    print('Your python code is: ')
    print()
    print(data)
    print()
    print('== copy the non-blank text below and paste into ==')
    print('==== answer part of the question in examplify ====')
    print()
    print(encoded1)
    print()
    print('== copy the non-blank text above and paste into ==')
    print('==== answer part of the question in examplify ====')
    print()
    finput.close()

def decodeFile2File():
    inpFile = input('Name of the file you want to decode: ')
    inp = open(inpFile,'r')
    print('Reading the file ...')
    data = inp.read()
    inp.close()
    print('Done reading.')
    print('Decoding begins...')
    oneStr = ''.join(data.split())
    dLen = len(oneStr)
    data = oneStr[2:dLen-1]
    bdata = data.encode('iso-8859-15')
    decoded = base64.b64decode(bdata).decode('utf-8')
    print('Done decoding.')
    print()
    outFile = input('File name for storing decoded result: ')
    print('This will overwrite the file with name '
          + outFile + ', if it exsits.')
    print('Do you really want to create/overwrite the file?')
    flag = input('Enter \'Y\' for Yes or \'N\' for No: ')
    while flag not in 'YNyn':
        flag = input('[Y or N]: ')
    if flag in 'Nn':
        print('Decoding aborted')
        return 0
    print('Proceed to write to ' + outFile + ' ...')    
    outp = open(outFile,'w')
    outp.write(decoded)
    print('=== The decoded data is ===')
    print()
    print(decoded)
    print()
    print('=== End of decoded data ===')
    outp.close()
    print('Done Storing.')
    
    
