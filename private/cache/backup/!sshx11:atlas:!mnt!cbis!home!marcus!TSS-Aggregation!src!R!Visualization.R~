suppressMessages({
    library(biomaRt)
    library(GenomicRanges)
    library(GenomicAlignments)
    library(GenomicFeatures)
    library(Gviz)
    library(tidyverse)
    source("viz_functions.R")
    options(ucscChromosomeNames=FALSE)
})

# Customize Gviz scheme
scheme <- getScheme()
scheme$DataTrack$col.histogram <- "#cc0000"
scheme$DataTrack$fill.histogram <- "#cc0000"
addScheme(scheme, "custom_1")
options(Gviz.scheme = "custom_1")

# Filepaths for .bam files
control1 <- "/mnt/gtklab01/marcus/SMAD_Pseudobams/AC1_S5/AC1_S5_mapped.bam"
control2 <- "/mnt/gtklab01/marcus/SMAD_Pseudobams/AC3_S6/AC3_S6_mapped.bam"
control3 <- "/mnt/gtklab01/marcus/SMAD_Pseudobams/AC4_S7/AC4_S7_mapped.bam"
control4 <- "/mnt/gtklab01/marcus/SMAD_Pseudobams/AC5_S8/AC5_S8_mapped.bam"
control_files <- c(control1, control2, control3, control4)

treatment1 <- "/mnt/gtklab01/marcus/SMAD_Pseudobams/AT1_S1/AT1_S1_mapped.bam"
treatment2 <- "/mnt/gtklab01/marcus/SMAD_Pseudobams/AT2_S2/AT2_S2_mapped.bam"
treatment3 <- "/mnt/gtklab01/marcus/SMAD_Pseudobams/AT3_S3/AT3_S3_mapped.bam"
treatment4 <- "/mnt/gtklab01/marcus/SMAD_Pseudobams/AT5_S4/AT5_S4_mapped.bam"
treatment_files <- c(treatment1, treatment2, treatment3, treatment4)

# For testing purposes with only 2 tracks
## control_files <- c(control1)
## treatment_files <- c(treatment1)

# Set up TSS windows
tss_window_file <- "/mnt/cbis/home/marcus/TSS-Aggregation/data/processed_data/ensembl_GRCh38.94/500_100/TSS_windows_500_100.bed.gz"
tss_windows <- read_tsv(tss_window_file, col_names=c("chrom", "start", "stop", "transcript_id", "gene_id", "strand", "gene_symbol")) %>% mutate(chrom=str_replace(chrom,"chr",""))
tss_windows <- makeGRangesFromDataFrame(tss_windows, seqnames.field=c("chrom"))

# Get GRCh38 Release 96 Homo Sapiens Tx
ensembl96 <- useMart(host='http://oct2018.archive.ensembl.org',
                     biomart='ENSEMBL_MART_ENSEMBL',
                     dataset='hsapiens_gene_ensembl')

# Get column attributes if needed
# lf <- listFilters(ensembl96)
# lf[grep("name", lf$description, ignore.case=TRUE),]
# la <- listAttributes(ensembl96)
# la[grep("gene", lf$description, ignore.case=TRUE),]

# Make TxDb ffrom GTF
gtf_fp <- "/mnt/cbis/home/marcus/TSS-Aggregation/data/reference_data/Homo_sapiens.GRCh38.94.gtf.gz"
txdb <- makeTxDbFromGFF(gtf_fp, format="gtf")
grl <- exonsBy(txdb, by=c("gene"))

control_coverages <- makeCoverages(control_files)
treatment_coverages <- makeCoverages(treatment_files)

control_gr <- makeGRs(control_coverages)
treatment_gr <- makeGRs(treatment_coverages)

map <- getBM(mart = ensembl96,
  attributes = c("chromosome_name", "ensembl_gene_id", "hgnc_symbol", "start_position", "end_position"),
  filters = "hgnc_symbol",
  values = "SMAD7")

map

gene <- grl[[map$ensembl_gene_id[1]]]
chrom <- map$chromosome_name[1]
start_pos <- map$start_position[1]
end_pos <- map$end_position[1]

gtrack <- GenomeAxisTrack()

grtrack <- GeneRegionTrack(txdb, name="Gene Model", chromosome=chrom, start=start_pos, end=end_pos)

tsstrack <- AnnotationTrack(tss_windows, name="TSS", chromosome=chrom, start=start_pos, end=end_pos, shape="box")
displayPars(tsstrack) <- list(fill="#3f4b60")

# xgr <- as(xcov, "GRanges")
# ygr <- as(ycov, "GRanges")

z <- GRanges(chrom, IRanges(start_pos, end_pos))
max_coverage <- getMaxCoverage(c(control_gr,treatment_gr), z)

control_dtracks <- makeDataTracks(control_gr, "Control", z, c(0,max_coverage))
treatment_dtracks <- makeDataTracks(treatment_gr, "Treatment", z, c(0, max_coverage))

# dtrack1 <- DataTrack(xgr[xgr %over% z], name="Condition (AC1_S5)")
# dtrack2 <- DataTrack(ygr[ygr %over% z], name="Treatment (AT1_S1)")

# Options for plotTracks types
# "p", "l", "b", "a", "s", "g", "r", "S",
# "smooth", "polygon", "horizon", "histogram",
# "mountain", "h", "boxplot", "gradient", "heatmap", "confint"

tracks <- list(gtrack, tsstrack, grtrack)
tracks <- append(tracks, control_dtracks)
tracks <- append(tracks, treatment_dtracks)

#pdf("../../SMAD7.pdf", width=8, height=12,paper="special")
# Change sizes to be a vector of length n = number of tracks, ie if 8 replicates are used, sizes needs to be of length n = 10
# For plotting with only 2 BAM files, use sizes=c(1,0.5,2,4,4)
plotTracks(tracks,
           type="histogram",
           from=start_pos,
           to=end_pos,
           transcriptAnnotation="symbol",
           background.panel="#FFFFF0",
           background.title="darkblue",
           reverseStrand=TRUE,
           sizes=c(1,0.5,2,4,4,4,4,4,4,4,4))
#dev.off()
